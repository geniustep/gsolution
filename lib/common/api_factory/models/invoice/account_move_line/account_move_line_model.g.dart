// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'account_move_line_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

AccountMoveLineModel _$AccountMoveLineModelFromJson(
        Map<String, dynamic> json) =>
    AccountMoveLineModel(
      moveId: json['move_id'],
      moveName: json['move_name'],
      date: json['date'],
      ref: json['ref'],
      parentState: json['parent_state'],
      journalId: json['journal_id'],
      companyId: json['company_id'],
      companyCurrencyId: json['company_currency_id'],
      countryId: json['country_id'],
      accountId: json['account_id'],
      accountInternalType: json['account_internal_type'],
      accountRootId: json['account_root_id'],
      sequence: json['sequence'],
      name: json['name'],
      quantity: json['quantity'],
      priceUnit: json['price_unit'],
      discount: json['discount'],
      debit: json['debit'],
      credit: json['credit'],
      balance: json['balance'],
      amountCurrency: json['amount_currency'],
      priceSubtotal: json['price_subtotal'],
      priceTotal: json['price_total'],
      reconciled: json['reconciled'],
      blocked: json['blocked'],
      dateMaturity: json['date_maturity'],
      currencyId: json['currency_id'],
      partnerId: json['partner_id'],
      productUomId: json['product_uom_id'],
      productId: json['product_id'],
      reconcileModelId: json['reconcile_model_id'],
      paymentId: json['payment_id'],
      statementLineId: json['statement_line_id'],
      statementId: json['statement_id'],
      taxIds: json['tax_ids'],
      taxLineId: json['tax_line_id'],
      taxGroupId: json['tax_group_id'],
      taxBaseAmount: json['tax_base_amount'],
      taxExigible: json['tax_exigible'],
      taxRepartitionLineId: json['tax_repartition_line_id'],
      tagIds: json['tag_ids'],
      taxAudit: json['tax_audit'],
      amountResidual: json['amount_residual'],
      amountResidualCurrency: json['amount_residual_currency'],
      fullReconcileId: json['full_reconcile_id'],
      matchedDebitIds: json['matched_debit_ids'],
      matchedCreditIds: json['matched_credit_ids'],
      analyticLineIds: json['analytic_line_ids'],
      analyticAccountId: json['analytic_account_id'],
      analyticTagIds: json['analytic_tag_ids'],
      recomputeTaxLine: json['recompute_tax_line'],
      displayType: json['display_type'],
      isRoundingLine: json['is_rounding_line'],
      excludeFromInvoiceTab: json['exclude_from_invoice_tab'],
      alwaysSetCurrencyId: json['always_set_currency_id'],
      expenseId: json['expense_id'],
      purchaseLineId: json['purchase_line_id'],
      isAngloSaxonLine: json['is_anglo_saxon_line'],
      saleLineIds: json['sale_line_ids'],
      id: json['id'],
      displayName: json['display_name'],
      createUid: json['create_uid'],
      createDate: json['create_date'],
      writeUid: json['write_uid'],
      writeDate: json['write_date'],
      lastUpdate: json['__last_update'],
    );

Map<String, dynamic> _$AccountMoveLineModelToJson(
        AccountMoveLineModel instance) =>
    <String, dynamic>{
      'move_id': instance.moveId,
      'move_name': instance.moveName,
      'date': instance.date,
      'ref': instance.ref,
      'parent_state': instance.parentState,
      'journal_id': instance.journalId,
      'company_id': instance.companyId,
      'company_currency_id': instance.companyCurrencyId,
      'country_id': instance.countryId,
      'account_id': instance.accountId,
      'account_internal_type': instance.accountInternalType,
      'account_root_id': instance.accountRootId,
      'sequence': instance.sequence,
      'name': instance.name,
      'quantity': instance.quantity,
      'price_unit': instance.priceUnit,
      'discount': instance.discount,
      'debit': instance.debit,
      'credit': instance.credit,
      'balance': instance.balance,
      'amount_currency': instance.amountCurrency,
      'price_subtotal': instance.priceSubtotal,
      'price_total': instance.priceTotal,
      'reconciled': instance.reconciled,
      'blocked': instance.blocked,
      'date_maturity': instance.dateMaturity,
      'currency_id': instance.currencyId,
      'partner_id': instance.partnerId,
      'product_uom_id': instance.productUomId,
      'product_id': instance.productId,
      'reconcile_model_id': instance.reconcileModelId,
      'payment_id': instance.paymentId,
      'statement_line_id': instance.statementLineId,
      'statement_id': instance.statementId,
      'tax_ids': instance.taxIds,
      'tax_line_id': instance.taxLineId,
      'tax_group_id': instance.taxGroupId,
      'tax_base_amount': instance.taxBaseAmount,
      'tax_exigible': instance.taxExigible,
      'tax_repartition_line_id': instance.taxRepartitionLineId,
      'tag_ids': instance.tagIds,
      'tax_audit': instance.taxAudit,
      'amount_residual': instance.amountResidual,
      'amount_residual_currency': instance.amountResidualCurrency,
      'full_reconcile_id': instance.fullReconcileId,
      'matched_debit_ids': instance.matchedDebitIds,
      'matched_credit_ids': instance.matchedCreditIds,
      'analytic_line_ids': instance.analyticLineIds,
      'analytic_account_id': instance.analyticAccountId,
      'analytic_tag_ids': instance.analyticTagIds,
      'recompute_tax_line': instance.recomputeTaxLine,
      'display_type': instance.displayType,
      'is_rounding_line': instance.isRoundingLine,
      'exclude_from_invoice_tab': instance.excludeFromInvoiceTab,
      'always_set_currency_id': instance.alwaysSetCurrencyId,
      'expense_id': instance.expenseId,
      'purchase_line_id': instance.purchaseLineId,
      'is_anglo_saxon_line': instance.isAngloSaxonLine,
      'sale_line_ids': instance.saleLineIds,
      'id': instance.id,
      'display_name': instance.displayName,
      'create_uid': instance.createUid,
      'create_date': instance.createDate,
      'write_uid': instance.writeUid,
      'write_date': instance.writeDate,
      '__last_update': instance.lastUpdate,
    };
